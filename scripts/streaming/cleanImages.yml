# Builds/Installs mirror from source
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cleanimages-actions
  labels:
    app: cleanimages
data:
  teleport: |
    #!/usr/bin/env bash
    set -e
    echo "Stop running containers ..."
    for i in `sudo ctr task ls | grep -E '\sRUNNING' | awk '{print $1}'`; do
      sudo ctr task kill $i
      while true; do
        sleep 1
        if sudo ctr task ls | grep -E '\sSTOPPED' | grep $i > /dev/null; then
          break
        fi
      done
    done

    echo "Remove containers ..."
    for i in `sudo ctr task ls -q`; do
      sudo ctr task delete $i
    done
    for i in `sudo ctr container ls -q`; do
      sudo ctr container delete $i
    done

    echo "Remove images ..."
    for i in `sudo ctr image ls -q`; do
      sudo ctr image rm --sync $i
    done
    for i in `sudo ctr -n k8s.io image ls -q`; do
      sudo ctr -n k8s.io image rm --sync $i
    done
    sleep 3

    echo "Clean registry cache and page cache ..."
    sudo rm -rf /opt/overlaybd/registry_cache/*
    sudo bash -c 'echo 1 > /proc/sys/vm/drop_caches'
    
    touch CLEANED.txt

    echo "Restarting overlaybd backstore ..."
    sudo systemctl restart overlaybd-tcmu
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: &name imagecleaner
  labels:
    app: *name
spec:
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      hostNetwork: true
      hostPID: true
      containers:
      - image: docker.io/alexeldeib/nsenter:latest # https://github.com/alexeldeib/azbench/blob/main/images/nsenter/entrypoint.sh
        imagePullPolicy: Always
        name: *name
        args: ["teleport"]
        resources:
          requests:
            cpu: 0.5
            memory: 2000Mi
          limits:
            cpu: 0.5
            memory: 2000Mi
        securityContext:
          privileged: true
        volumeMounts:
        - name: actions
          mountPath: "/opt/actions"
        - name: hostmount
          mountPath: "/mnt/actions"
      volumes:
      - name: hostmount
        hostPath:
          path: /opt/actions
          type: DirectoryOrCreate
      - name: actions
        configMap:
          name: cleanimages-actions

